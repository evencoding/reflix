{"version":3,"sources":["assets/noPosterSmall.jpg","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Sections","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Section","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","tv","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","name","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","li","current","SLink","Link","List","ul","withRouter","ROUTER","path","exact","component","Home","TV","Search","Detail","from","globalStyle","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d17579cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.31ee8645.jpg\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"c2f4c6739f939415d302ea7425537908\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  /* :not(:last-child) {\r\n    margin-bottom: 40px;\r\n  } */\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 14px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Sections = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSections.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Sections;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n  font-size: 35px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-size: 16px;\r\n  font-size: 500;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 4px;\r\n  transition: opacity 0.15s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 6px;\r\n  right: 10px;\r\n  opacity: 0;\r\n  transition: opacity 0.15s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  margin-bottom: 5px;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.jpg\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating} / 10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 20 ? `${title.substring(1, 20)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | ReFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nclass HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 30px 0px 10px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 40px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | ReFlix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Results\">\r\n            {tvResults.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length < 1 &&\r\n      movieResults.length < 1 && (\r\n        <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nclass SearchContainer extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n      });\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | ReFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated\">\r\n            {topRated.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nclass TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  margin-right: 15px;\r\n  width: 30%;\r\n  min-width: 300px;\r\n  height: 100%;\r\n  min-height: 400px;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 6px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 28px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  margin-top: 10px;\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | ReFlix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message color=\"#e74c3c\" text={error} />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.name} | ReFlix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.jpg\").default\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title ? result.original_title : result.name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>●</Divider>\r\n            <Item>\r\n              {result.runtime\r\n                ? `${result.runtime} min`\r\n                : `${result.episode_run_time[0]} min`}\r\n            </Item>\r\n            <Divider>●</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            <Overview>{result.overview}</Overview>\r\n          </ItemContainer>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nclass DatailContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return <DetailPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n\r\nexport default DatailContainer;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 70px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst HEADER = ({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n);\r\n\r\nexport default withRouter(HEADER);\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Header from \"./Header\";\r\n\r\nconst ROUTER = () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n\r\nexport default ROUTER;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyle = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyle;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}