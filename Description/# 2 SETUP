----------------------------------------------------------------------------------
# 2.0 Setting Up the Project
    (1) npx 로 creact-react-app (app_name)을 해주면 필요한 모든것을 설치하고 작업이 끝나면 삭제한다
        컴퓨터에 creact-react-app이 남지 않기 때문에 유용하다
        사용하지 않는 오래된 버전의 것들을 컴퓨터에 저장하지 않게 해주기 때문이다
    (2) jsconfig.json 파일을 만들고 아래 내용을 입력해서 절대경로를 만들어준다
    {
    "compilerOptions": {
    "baseUrl": "src"
    },
    "include": ["src"]
    }    
    (3) yarn add prop-types로 propTypes 를 설치한다
----------------------------------------------------------------------------------
# 2.1 React Router Part One
    (1) README.md 파일에서 프로젝트를 기획한다
    (2) src폴더안에 Components 폴더를 만들고 App.js를 넣어준다
    (3) src폴더안에 Routes 폴더를 생성하고 Screen Components를 관리해준다
    (4) React Router로 React App에게 Home에서 시작해야 한다는 것을 알려준다
    (5) React Router는 React에서 거의 유일한 Rouing 패키지이다
    (6) yarn add react-router-dom으로 설치해준다
    (7) Components 폴더에 Router 컴포넌트를 만들어준다
    (8) Router에는 대표적으로 HashRouter와 BrowerRouter가 존재한다
    (9) Router와 Route를 import 해준다
    (10) Route에는 path와 component가 필요하다
        exact를 써주면 정확히 path와 같을 때 작동한다
        component는 누군가 이 Route에 왔을 떄 어떤 컴포넌트가 보여질 건 지에 대한 것이다
        Route는 Router안에 있어야 한다
----------------------------------------------------------------------------------
# 2.2 React Router part Two
    (1) Browser Router 는 HTML history API를 사용한다
    (2) Hash Router는 내 페이지의 Hash를 사용한다
    (3) Composition은 두 개 이상의 Route를 동시에 랜더링하는 방식이다
        <Route path="/tv" component={TV} />
        <Route path="/tv/popular" render={() => <h1>Popular</h1>} />
            /tv/popular 페이지에 가면 TV 컴포넌트 포함 두개가 표시된다
    (4) Application 내에서의 페이지 이동은 Link 를 사용한다
    (5) Redirect
        <Redirect from="*" to="/" />
            어느페이지(*)에서나 일치하는 페이지가 없다면 /로 간다
    (6) Switch는 한 번에 오직 하나의 Route만 Render하게 해준다
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
